<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>22</string>
					<key>EndingLineNumber</key>
					<string>7</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>7</string>
					<key>Timestamp</key>
					<string>762910355.7734489</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>// Library Connections</string>
				<key>leading</key>
				<string>//

</string>
				<key>trailing</key>
				<string>
#define GLFW_INCLUDE_VULKAN
#include &lt;GLFW/glfw3.h&gt;
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>82</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>81</string>
					<key>Timestamp</key>
					<string>763500319.319533</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    //Class Members
</string>
				<key>leading</key>
				<string>private:
    
</string>
				<key>trailing</key>
				<string>    GLFWwindow* window;
    
    VkInstance instance;
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>127</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>126</string>
					<key>Timestamp</key>
					<string>763514460.430248</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Initialize Vulkan
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    void initVulkan() {
        createInstance();
        createSurface();
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>152</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>151</string>
					<key>Timestamp</key>
					<string>764787186.350683</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Cleanup Process
</string>
				<key>leading</key>
				<string>    }

</string>
				<key>trailing</key>
				<string>    void cleanup() {
        cleanupSwapChain();

</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>181</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>180</string>
					<key>Timestamp</key>
					<string>764897547.505969</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Create and bind vulkan instance
</string>
				<key>leading</key>
				<string>    
    // SubFunction of initVulkan
</string>
				<key>trailing</key>
				<string>    void createInstance() {
        
        // App Info
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>255</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>254</string>
					<key>Timestamp</key>
					<string>764897547.506016</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Creating Swapchain Settings
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    VkSurfaceFormatKHR chooseSwapSurfaceFormat(const std::vector&lt;VkSurfaceFormatKHR&gt;&amp; availableFormats) {
        
        // Set Colorspace and Format
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>268</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>267</string>
					<key>Timestamp</key>
					<string>764897547.505936</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Creating and Setting Present Mode
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    VkPresentModeKHR chooseSwapPresentMode(const std::vector&lt;VkPresentModeKHR&gt;&amp; availablePresentModes) {
        for (const auto&amp; availablePresentMode : availablePresentModes) {
            if (availablePresentMode == VK_PRESENT_MODE_MAILBOX_KHR) {
</string>
			</dict>
			<key>title</key>
			<string>// Creating and Setting Present Mode</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>299</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>298</string>
					<key>Timestamp</key>
					<string>764897547.505953</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Validation Layer Support
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    bool checkValidationLayerSupport() {
        uint32_t layerCount;
        vkEnumerateInstanceLayerProperties(&amp;layerCount, nullptr);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>333</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>332</string>
					<key>Timestamp</key>
					<string>764897547.506292</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Check for Vulkan Capable GPU's (Exit if none)
</string>
				<key>leading</key>
				<string>    
    // SubFunction of InitVulkan
</string>
				<key>trailing</key>
				<string>    void pickPhysicalDevice() {
        uint32_t deviceCount = 0;
        vkEnumeratePhysicalDevices(instance, &amp;deviceCount, nullptr);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>358</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>357</string>
					<key>Timestamp</key>
					<string>764897547.506092</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Check if Device is Suitable
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    bool isDeviceSuitable(VkPhysicalDevice device) {
        VkPhysicalDeviceProperties deviceProperties;
        VkPhysicalDeviceFeatures deviceFeatures;
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>383</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>382</string>
					<key>Timestamp</key>
					<string>764897547.506169</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Check Device Extension Support
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    bool checkDeviceExtensionSupport(VkPhysicalDevice device) {
        uint32_t extensionCount;
        vkEnumerateDeviceExtensionProperties(device, nullptr, &amp;extensionCount, nullptr);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>400</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>399</string>
					<key>Timestamp</key>
					<string>764897547.5061851</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Queue Families
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    QueueFamilyIndices findQueueFamilies(VkPhysicalDevice device) {
        QueueFamilyIndices indices;
        // Assign index to queue families that could be found
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>436</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>435</string>
					<key>Timestamp</key>
					<string>764897547.5062619</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Logical Device
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void createLogicalDevice() {
        QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
        
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>455</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>454</string>
					<key>Timestamp</key>
					<string>764897547.506047</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        // Used Device Features
</string>
				<key>leading</key>
				<string>        
        
</string>
				<key>trailing</key>
				<string>        VkPhysicalDeviceFeatures deviceFeatures{};
        
        VkDeviceCreateInfo createInfo{};
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>487</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>486</string>
					<key>Timestamp</key>
					<string>764897547.506277</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Creating Swapchain
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    void createSwapChain() {
        SwapChainSupportDetails swapChainSupport = querySwapChainSupport(physicalDevice);

</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>550</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>549</string>
					<key>Timestamp</key>
					<string>764897547.505985</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Create Image Views
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    void createImageViews() {
        swapChainImageViews.resize(swapChainImages.size());
        for (size_t i = 0; i &lt; swapChainImages.size(); i++) {
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>579</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>578</string>
					<key>Timestamp</key>
					<string>764897547.506031</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // More SwapChain Details
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    SwapChainSupportDetails querySwapChainSupport(VkPhysicalDevice device) {
        SwapChainSupportDetails details;
        
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>605</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>604</string>
					<key>Timestamp</key>
					<string>764897547.506247</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Render Passes
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void createRenderPass() {
        VkAttachmentDescription colorAttachment{};
        colorAttachment.format = swapChainImageFormat;
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>652</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>651</string>
					<key>Timestamp</key>
					<string>764897547.506216</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Graphics Pipeline
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    void createGraphicsPipeline() {
        auto vertShaderCode = readFile("/Users/lukeraykovitz/Documents/Projects/VulkanRender/VulkanRender/shaders/vert.spv");
        auto fragShaderCode = readFile("/Users/lukeraykovitz/Documents/Projects/VulkanRender/VulkanRender/shaders/frag.spv");
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>814</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>813</string>
					<key>Timestamp</key>
					<string>764897547.506231</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Framebuffer
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void createFramebuffers() {
        swapChainFramebuffers.resize(swapChainImageViews.size());
        
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>856</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>855</string>
					<key>Timestamp</key>
					<string>764897547.506108</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Command Buffer
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void createCommandBuffers() {
        commandBuffers.resize(MAX_FRAMES_IN_FLIGHT);

</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>874</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>873</string>
					<key>Timestamp</key>
					<string>764897547.5060771</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Record Command Buffer
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex) {
        // Buffer Details
        VkCommandBufferBeginInfo beginInfo{};
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>901</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>900</string>
					<key>Timestamp</key>
					<string>764897547.5061539</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        // Bind Graphics Pipeline
</string>
				<key>leading</key>
				<string>        
        vkCmdBeginRenderPass(commandBuffer, &amp;renderPassInfo, VK_SUBPASS_CONTENTS_INLINE);
</string>
				<key>trailing</key>
				<string>        vkCmdBindPipeline(commandBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS, graphicsPipeline);
        
        VkViewport viewport{};
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>931</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>930</string>
					<key>Timestamp</key>
					<string>764897547.505857</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Sync Objects/Semaphores
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void createSyncObjects() {
        imageAvailableSemaphores.resize(MAX_FRAMES_IN_FLIGHT);
        renderFinishedSemaphores.resize(MAX_FRAMES_IN_FLIGHT);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>957</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>956</string>
					<key>Timestamp</key>
					<string>764897547.506124</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Draw Frame
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>    void drawFrame() {
        // Wait For Previous Frame
        vkWaitForFences(device, 1, &amp;inFlightFences[currentFrame], VK_TRUE, UINT64_MAX);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>1016</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>1015</string>
					<key>Timestamp</key>
					<string>764897547.506138</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Cleanup Swapchain
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void cleanupSwapChain() {
        for (size_t i = 0; i &lt; swapChainFramebuffers.size(); i++) {
            vkDestroyFramebuffer(device, swapChainFramebuffers[i], nullptr);
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>1030</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>1029</string>
					<key>Timestamp</key>
					<string>764897556.8406301</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    // Swapchain Recreation
</string>
				<key>leading</key>
				<string>    
    
</string>
				<key>trailing</key>
				<string>    void recreateSwapChain() {
        vkDeviceWaitIdle(device);
        
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>1102</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>1102</string>
					<key>Timestamp</key>
					<string>764897556.8406481</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    return EXIT_SUCCESS;
}
</string>
				<key>trailing</key>
				<string></string>
			</dict>
			<key>title</key>
			<string>END OF CODE</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>896</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>895</string>
					<key>Timestamp</key>
					<string>764897547.5062</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>VulkanRender/main.cpp</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        VkClearValue clearColor = {{{0.015f, 0.015f, 0.02f, 1.0f}}};
</string>
				<key>leading</key>
				<string>        renderPassInfo.renderArea.extent = swapChainExtent;
        
</string>
				<key>trailing</key>
				<string>        renderPassInfo.clearValueCount = 1;
        renderPassInfo.pClearValues = &amp;clearColor;
        
</string>
			</dict>
			<key>title</key>
			<string>Background Color</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
